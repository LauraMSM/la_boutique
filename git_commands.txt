# Muestra en qué rama estás trabajando; la rama master sería "main"; además, la rama seleccionada debe venir precedida de un asterisco.
git branch

# Si usas este comando, hace lo mismo, pero se creó para especificar. Antes, git checkout se usaba para cambiar entre ramas o restaurar o ver las versiones de los archivos, etc.
git switch

# Añadiendo un nombre después de "branch" estás creando una rama.
git branch nombre_rama
o 
git switch -c nombre_rama (Cambia a la rama creada a la vez que la crea)

# Este comando te permite ver información más detallada de los cambios hechos, si se ha hecho algún commit, además de ver en qué rama estás trabajando.
git show-branch

# Para hacer un "merge" y fusionar las ramas, es necesario estar ubicado en la rama "master" o "main" (como se llama ahora), y añadir el comando más el nombre de la rama. Lo ideal, además, es añadir un commit al "merge".
git merge nombre_rama -m "Se ha fusionado la rama con la main."

# Si trabajas en la rama experimental y quieres unir los cambios hechos en la "main" a tu rama, puedes hacerlo así:
git merge main -m "Fusionados cambios en la main con la rama."

# Para aplicar cambios hechos en la main en tu propia rama, hay que hacer lo siguiente:
git switch nombre_rama
git fetch origin (para actualizarla sin aplicar los cambios)
git merge origin/main

# Si quieres subir tu rama al repositorio debes escribir:
git push -u origin nombre_rama

# Para borrar una rama se debe tener en cuenta si se ha hecho o no el push:
## Si no has hecho el push y sigue en local:
git branch -d nombre_rama 
o 
git branch -D nombre_rama (-D sirve para forzar el borrado)

## Si ya has hecho el push y está en remoto:
git push origin --delete nombre_rama

# Si queremos comprobar los últimos cambios realizados en el repositorio remoto en vez de hacer un "pull" y descargarlos, podemos usar el siguiente comando:
git fetch
## No actualizará tu repo local, como hace "pull", pero sí te permitirá saber qué cambios se han hecho antes de que decidas hacer el "pull".



############################## VERSIONES DE ARCHIVOS ##############################
# Este comando muestra las versiones y códigos de los commits hechos.
git log --oneline


################################# RESUMEN #################################

git checkout nombre_rama
# Una vez realices cambios:
git add .
git commit -m "mensaje"
git push -u origin nombre_rama

# Si el push nanai, haz esto:
git checkout main
git merge nombre_rama (-m "mensaje") # se puede omitir el paréntesis
git push

# Si quieres actualizar tu rama:
git checkout nombre_rama
git fetch origin
git merge origin/main






################################# COMANDOS EXTRA #################################

# En vez de escribir la url completa de un repo, podemos asignarle un nombre sencillo a la hora de hacer "pull" o "push".
git remote add nombre_para_el_repo url_repo

# Para ver la lista de repos remotos usamos:
git remote 
o 
git remote -v (muestra la url además)

# Para borrar un remote
git remote rm nombre_asignado_remote

# También podemos renombrarlo usando:
git remote rename old_name new_name



################################# COMANDOS VIEJOS #################################

# Este comando te permite cambiar de rama a la vez que la creas.
git checkout -b nombre_rama
